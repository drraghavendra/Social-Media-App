Here's a high-level overview of a smart contract wallet integration procedure for a NEXT.js application of an incubation center built using Move Language and Aptos for Petra wallet, incorporating features like milestones, funding mechanisms, and tokenization:

1.  Setting Up the Development Environment:

Install the Aptos CLI and configure it for your project. (https://aptos.dev/tools/aptos-cli/install-cli/)
Install Move compiler and tools. (https://aptos.dev/move/prover/move-prover/)
Set up your NEXT.js project and integrate the Petra wallet SDK for Aptos. (https://chromewebstore.google.com/detail/petra-aptos-wallet/ejjladinnckdgjemekebdpeokbikhfci?hl=en)
2. Smart Contract Development (Move Language):

Structs:

Startup - This struct will store information about a startup, including its name, description, team members, etc.
Milestone - This struct will define a milestone for a startup, including a description, deadline, and associated funding amount.
Investment - This struct will track investments made towards a startup, including the investor address, amount invested, and timestamp.
Contract:

The contract will manage startups, milestones, funding, and tokenization.
Functions:
addStartup: Allows authorized personnel (incubation center admin) to add a new startup to the system.
addMilestone: Allows adding a milestone for a specific startup.
invest: Enables investors to invest in a particular startup and milestone using the Petra wallet. (Funds will be held in the contract until the milestone is completed)
completeMilestone: Allows marking a milestone as completed by authorized personnel. Upon completion, funds for that milestone will be released to the startup.
createToken: (Optional) This function can be used to create a fungible token representing ownership or investment in the incubation center itself. (Requires additional logic for managing token supply and distribution)
3. NEXT.js Application Integration:

Develop components for:
Startup application and management (Admin Panel)
Milestone creation and tracking
Investor dashboard for investment tracking
Integration with Petra wallet for secure login and transactions
Use the Petra wallet SDK to connect to the Aptos network and interact with the smart contract functions.
Display relevant data from the smart contract on the application interfaces.
4. Deployment:

Compile the Move smart contract code.
Deploy the contract to the Aptos blockchain using the Aptos CLI.
Update your NEXT.js application to interact with the deployed contract address.
Additional Considerations:

Security: Implement access control mechanisms to restrict unauthorized access to contract functions.
Error Handling: Handle potential errors during transactions and provide informative messages to users.
Testing: Thoroughly test the smart contract and application integration to ensure functionality and security.
Limitations:

This is a high-level overview, and the actual implementation will require in-depth knowledge of Move Language, Aptos blockchain, Petra wallet SDK, and NEXT.js development. It's advisable to consult the official documentation for each technology for detailed instructions and examples.

Further Resources:

Aptos Docs: https://aptos.dev/
Move Language: https://aptos.dev/move/prover/move-prover/
Petra Wallet: https://chromewebstore.google.com/detail/petra-aptos-wallet/ejjladinnckdgjemekebdpeokbikhfci?hl=en
NEXT.js: [invalid URL removed]